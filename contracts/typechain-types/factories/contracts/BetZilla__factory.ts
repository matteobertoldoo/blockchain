/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { BetZilla, BetZillaInterface } from "../../contracts/BetZilla";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "betId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "bettor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BetPlaced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "betId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "bettor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BetWon",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
    ],
    name: "EventCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
    ],
    name: "EventResolved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FeeCollected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "FEE_DENOMINATOR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
    ],
    name: "calculateOdds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_title",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endTime",
        type: "uint256",
      },
    ],
    name: "createEvent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "eventBets",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "bettor",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "odds",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isWon",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "events",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalPool",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isResolved",
        type: "bool",
      },
      {
        internalType: "address",
        name: "winner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
    ],
    name: "getEvent",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalPool",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isResolved",
            type: "bool",
          },
          {
            internalType: "address",
            name: "winner",
            type: "address",
          },
        ],
        internalType: "struct BetZilla.Event",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
    ],
    name: "getEventBets",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "bettor",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "odds",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isWon",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct BetZilla.Bet[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getUserBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
    ],
    name: "placeBet",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "platformFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_winner",
        type: "address",
      },
    ],
    name: "resolveEvent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "setPlatformFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052603260075534801561001557600080fd5b50600160005561002433610029565b61007b565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6118fe8061008a6000396000f3fe6080604052600436106100fe5760003560e01c80636d1884e011610095578063bce062b911610064578063bce062b9146102fd578063d06a890e1461031d578063d73792a91461033d578063edc365f814610353578063f2fde38b1461038057600080fd5b80636d1884e014610232578063715018a61461025f5780638da5cb5b146102745780638dcbbc6f1461029c57600080fd5b806326232a2e116100d157806326232a2e146101b15780633ccfd60b146101c757806345efa214146101dc57806347734892146101fc57600080fd5b80630b7914301461010357806310fe7c481461014157806312e8e2c31461015657806326224c6414610176575b600080fd5b34801561010f57600080fd5b5061012361011e366004611312565b6103a0565b60405161013899989796959493929190611371565b60405180910390f35b61015461014f366004611312565b61050a565b005b34801561016257600080fd5b50610154610171366004611312565b61076f565b34801561018257600080fd5b506101a36101913660046113fb565b60066020526000908152604090205481565b604051908152602001610138565b3480156101bd57600080fd5b506101a360075481565b3480156101d357600080fd5b506101546107bd565b3480156101e857600080fd5b506101a36101f7366004611312565b6108c2565b34801561020857600080fd5b506101a36102173660046113fb565b6001600160a01b031660009081526006602052604090205490565b34801561023e57600080fd5b5061025261024d366004611312565b610907565b6040516101389190611416565b34801561026b57600080fd5b50610154610b07565b34801561028057600080fd5b506001546040516001600160a01b039091168152602001610138565b3480156102a857600080fd5b506102bc6102b73660046114bf565b610b19565b604080519788526001600160a01b03909616602088015294860193909352606085019190915215156080840152151560a083015260c082015260e001610138565b34801561030957600080fd5b506101a3610318366004611584565b610b84565b34801561032957600080fd5b506101546103383660046115f8565b610d92565b34801561034957600080fd5b506101a361271081565b34801561035f57600080fd5b5061037361036e366004611312565b6110d1565b6040516101389190611624565b34801561038c57600080fd5b5061015461039b3660046113fb565b611197565b600460205260009081526040902080546001820180549192916103c2906116b3565b80601f01602080910402602001604051908101604052809291908181526020018280546103ee906116b3565b801561043b5780601f106104105761010080835404028352916020019161043b565b820191906000526020600020905b81548152906001019060200180831161041e57829003601f168201915b505050505090806002018054610450906116b3565b80601f016020809104026020016040519081016040528092919081815260200182805461047c906116b3565b80156104c95780601f1061049e576101008083540402835291602001916104c9565b820191906000526020600020905b8154815290600101906020018083116104ac57829003601f168201915b505050506003830154600484015460058501546006909501549394919390925060ff808216916101008104909116906201000090046001600160a01b031689565b61051261120d565b6000818152600460205260409020600681015460ff1661056f5760405162461bcd60e51b81526020600482015260136024820152724576656e74206973206e6f742061637469766560681b60448201526064015b60405180910390fd5b806004015442106105b45760405162461bcd60e51b815260206004820152600f60248201526e115d995b9d081a185cc8195b991959608a1b6044820152606401610566565b6000341161060e5760405162461bcd60e51b815260206004820152602160248201527f42657420616d6f756e74206d7573742062652067726561746572207468616e206044820152600360fc1b6064820152608401610566565b61061c600280546001019055565b600061062760025490565b905060006040518060e00160405280838152602001336001600160a01b0316815260200134815260200161065a866108c2565b815260016020808301829052600060408085018290524260609586015289825260058084528183208054808701825590845284842088516006909202019081559387015194840180546001600160a01b039096166001600160a01b0319909616959095179094558501516002830155928401516003820155608084015160048201805460a087015115156101000261ff00199315159390931661ffff199091161791909117905560c084015190820155850180549293503492909190610721908490611703565b90915550506040513481523390839086907ffdd8ed02332acacb3420e7345a9adadb30877075eade2bcde9fe778e8bb71e429060200160405180910390a450505061076c6001600055565b50565b610777611266565b6103e88111156107b85760405162461bcd60e51b815260206004820152600c60248201526b08ccaca40e8dede40d0d2ced60a31b6044820152606401610566565b600755565b6107c561120d565b336000908152600660205260409020548061081b5760405162461bcd60e51b81526020600482015260166024820152754e6f2062616c616e636520746f20776974686472617760501b6044820152606401610566565b336000818152600660205260408082208290555190919083908381818185875af1925050503d806000811461086c576040519150601f19603f3d011682016040523d82523d6000602084013e610871565b606091505b50509050806108b45760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606401610566565b50506108c06001600055565b565b6000818152600460205260408120600581015482036108e5575061271092915050565b60058101546108f68161271061171c565b6109009190611733565b9392505050565b61096360405180610120016040528060008152602001606081526020016060815260200160008152602001600081526020016000815260200160001515815260200160001515815260200160006001600160a01b031681525090565b60046000838152602001908152602001600020604051806101200160405290816000820154815260200160018201805461099c906116b3565b80601f01602080910402602001604051908101604052809291908181526020018280546109c8906116b3565b8015610a155780601f106109ea57610100808354040283529160200191610a15565b820191906000526020600020905b8154815290600101906020018083116109f857829003601f168201915b50505050508152602001600282018054610a2e906116b3565b80601f0160208091040260200160405190810160405280929190818152602001828054610a5a906116b3565b8015610aa75780601f10610a7c57610100808354040283529160200191610aa7565b820191906000526020600020905b815481529060010190602001808311610a8a57829003601f168201915b505050918352505060038201546020820152600482015460408201526005820154606082015260069091015460ff80821615156080840152610100820416151560a08301526201000090046001600160a01b031660c09091015292915050565b610b0f611266565b6108c060006112c0565b60056020528160005260406000208181548110610b3557600080fd5b60009182526020909120600690910201805460018201546002830154600384015460048501546005909501549396506001600160a01b03909216945092909160ff808316926101009004169087565b6000610b8e611266565b428311610bdd5760405162461bcd60e51b815260206004820181905260248201527f53746172742074696d65206d75737420626520696e20746865206675747572656044820152606401610566565b828211610c365760405162461bcd60e51b815260206004820152602160248201527f456e642074696d65206d7573742062652061667465722073746172742074696d6044820152606560f81b6064820152608401610566565b610c44600380546001019055565b6000610c4f60035490565b604080516101208101825282815260208082018a81528284018a90526060830189905260808301889052600060a08401819052600160c0850181905260e085018290526101008501829052868252600490935293909320825181559251939450909290820190610cbf90826117a4565b5060408201516002820190610cd490826117a4565b50606082015160038201556080820151600482015560a0820151600582015560c08201516006909101805460e08401516101009485015161ffff1990921693151561ff001916939093179215159093029190911762010000600160b01b031916620100006001600160a01b039093169290920291909117905560405181907fee37bb5143a14810f72e86fce895be08e16090409d2e18f79b308995e39b73d490610d819089908890611864565b60405180910390a295945050505050565b610d9a611266565b6000828152600460205260409020600681015460ff16610df25760405162461bcd60e51b81526020600482015260136024820152724576656e74206973206e6f742061637469766560681b6044820152606401610566565b6006810154610100900460ff1615610e455760405162461bcd60e51b8152602060048201526016602482015275115d995b9d08185b1c9958591e481c995cdbdb1d995960521b6044820152606401610566565b8060040154421015610e8f5760405162461bcd60e51b8152602060048201526013602482015272115d995b9d081a185cc81b9bdd08195b991959606a1b6044820152606401610566565b6006810180546001600160a01b03841662010000026001600160b01b031990911617610100179055600581015460075460009061271090610ed0908461171c565b610eda9190611733565b90506000610ee88284611886565b905060005b600087815260056020526040902054811015611014576000878152600560205260408120805483908110610f2357610f23611899565b6000918252602090912060069091020160018101549091506001600160a01b038881169116036110015760048101805461ff0019166101001790556005860154600282015460009190610f7790869061171c565b610f819190611733565b60018301546001600160a01b0316600090815260066020526040812080549293508392909190610fb2908490611703565b9091555050600182015482546040518381526001600160a01b03909216918b907fb6567c7a08ddc8abab1ab90e1767f79393ddc9cd49912543aff0d97db547c4709060200160405180910390a4505b508061100c816118af565b915050610eed565b50816006600061102c6001546001600160a01b031690565b6001600160a01b03166001600160a01b03168152602001908152602001600020600082825461105b9190611703565b90915550506040518281527fc472cb3a7a659a876494d66b3063145f279701771d6150b9329c31611ed6405c9060200160405180910390a16040516001600160a01b0386169087907f48f9ba6619957152d135d6e3545186c6a9de7a5e3ef0ac7cdfa5ddd0e679f4c990600090a3505050505050565b606060056000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561118c5760008481526020908190206040805160e08101825260068602909201805483526001808201546001600160a01b03168486015260028201549284019290925260038101546060840152600481015460ff8082161515608086015261010090910416151560a08401526005015460c08301529083529092019101611106565b505050509050919050565b61119f611266565b6001600160a01b0381166112045760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610566565b61076c816112c0565b60026000540361125f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610566565b6002600055565b6001546001600160a01b031633146108c05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610566565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006020828403121561132457600080fd5b5035919050565b6000815180845260005b8181101561135157602081850181015186830182015201611335565b506000602082860101526020601f19601f83011685010191505092915050565b60006101208b835280602084015261138b8184018c61132b565b9050828103604084015261139f818b61132b565b60608401999099525050608081019590955260a085019390935290151560c0840152151560e08301526001600160a01b0316610100909101529392505050565b80356001600160a01b03811681146113f657600080fd5b919050565b60006020828403121561140d57600080fd5b610900826113df565b60208152815160208201526000602083015161012080604085015261143f61014085018361132b565b91506040850151601f1985840301606086015261145c838261132b565b92505060608501516080850152608085015160a085015260a085015160c085015260c085015161149060e086018215159052565b5060e08501516101006114a68187018315159052565b909501516001600160a01b031693019290925250919050565b600080604083850312156114d257600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261150857600080fd5b813567ffffffffffffffff80821115611523576115236114e1565b604051601f8301601f19908116603f0116810190828211818310171561154b5761154b6114e1565b8160405283815286602085880101111561156457600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806080858703121561159a57600080fd5b843567ffffffffffffffff808211156115b257600080fd5b6115be888389016114f7565b955060208701359150808211156115d457600080fd5b506115e1878288016114f7565b949794965050505060408301359260600135919050565b6000806040838503121561160b57600080fd5b8235915061161b602084016113df565b90509250929050565b602080825282518282018190526000919060409081850190868401855b828110156116a657815180518552868101516001600160a01b03168786015285810151868601526060808201519086015260808082015115159086015260a08082015115159086015260c0908101519085015260e09093019290850190600101611641565b5091979650505050505050565b600181811c908216806116c757607f821691505b6020821081036116e757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115611716576117166116ed565b92915050565b8082028115828204841417611716576117166116ed565b60008261175057634e487b7160e01b600052601260045260246000fd5b500490565b601f82111561179f57600081815260208120601f850160051c8101602086101561177c5750805b601f850160051c820191505b8181101561179b57828155600101611788565b5050505b505050565b815167ffffffffffffffff8111156117be576117be6114e1565b6117d2816117cc84546116b3565b84611755565b602080601f83116001811461180757600084156117ef5750858301515b600019600386901b1c1916600185901b17855561179b565b600085815260208120601f198616915b8281101561183657888601518255948401946001909101908401611817565b50858210156118545787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604081526000611877604083018561132b565b90508260208301529392505050565b81810381811115611716576117166116ed565b634e487b7160e01b600052603260045260246000fd5b6000600182016118c1576118c16116ed565b506001019056fea2646970667358221220342ae1a6ab5619aca8ddfc36c76902ffbdc6451a899849d99fa7b9a02487e00664736f6c63430008140033";

type BetZillaConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BetZillaConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BetZilla__factory extends ContractFactory {
  constructor(...args: BetZillaConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      BetZilla & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BetZilla__factory {
    return super.connect(runner) as BetZilla__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BetZillaInterface {
    return new Interface(_abi) as BetZillaInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BetZilla {
    return new Contract(address, _abi, runner) as unknown as BetZilla;
  }
}
